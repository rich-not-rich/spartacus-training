{"version":3,"sources":["modules/router-store/router-store.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ngrx","routerStore","store","tslib","ng","core","router","rxjs","operators","this","tslib_1","NavigationActionTiming","routerRequestAction","createAction","props","ROUTER_NAVIGATION","routerNavigationAction","ROUTER_CANCEL","routerCancelAction","ROUTER_ERROR","routerErrorAction","routerNavigatedAction","RouterStateSerializer","DefaultRouterStateSerializer","prototype","serialize","routerState","root","serializeRoute","url","route","_this","children","map","c","params","paramMap","data","outlet","routeConfig","component","path","pathMatch","redirectTo","queryParams","queryParamMap","fragment","undefined","parent","firstChild","pathFromRoot","MinimalRouterStateSerializer","RouterTrigger","_ROUTER_CONFIG","InjectionToken","ROUTER_CONFIG","DEFAULT_ROUTER_FEATURENAME","_createRouterConfig","config","__assign","stateKey","serializer","navigationActionTiming","PreActivation","StoreRouterConnectingModule","errorHandler","lastEvent","trigger","NONE","setUpStoreStateListener","setUpRouterEventsListener","StoreRouterConnectingModule_1","forRoot","ngModule","providers","provide","useValue","useFactory","deps","useClass","pipe","select","withLatestFrom","subscribe","_a","_b","__read","navigateIfNeeded","routerStoreState","storeState","state","ROUTER","NavigationStart","STORE","navigateByUrl","catch","error","handleError","routesRecognized","dispatchNavLate","PostActivation","events","event","snapshot","dispatchRouterRequest","RoutesRecognized","dispatchRouterNavigation","NavigationCancel","dispatchRouterCancel","reset","NavigationError","dispatchRouterError","NavigationEnd","dispatchRouterNavigated","dispatchRouterAction","lastRoutesRecognized","nextRouterState","id","urlAfterRedirects","type","payload","dispatch","__decorate","NgModule","__param","Inject","__metadata","Store","Router","ErrorHandler","Object","ɵngrx_modules_router_store_router_store_a","ɵngrx_modules_router_store_router_store_b","ROUTER_NAVIGATED","ROUTER_REQUEST","routerReducer","action","routerAction","navigationId","getSelectors","selectState","selectRouterState","createSelector","selectCurrentRoute","selectQueryParams","selectRouteParams","selectRouteData","selectUrl","selectQueryParam","param","selectRouteParam","defineProperty","value"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 8.6.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@ngrx/store'), require('tslib'), require('@angular/core'), require('@angular/router'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/router-store', ['exports', '@ngrx/store', 'tslib', '@angular/core', '@angular/router', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ngrx = global.ngrx || {}, global.ngrx.routerStore = {}), global.ngrx.store, global.tslib, global.ng.core, global.ng.router, global.rxjs.operators));\n}(this, function (exports, store, tslib_1, core, router, operators) { 'use strict';\n\n    /**\n     * An action dispatched when a router navigation request is fired.\n     */\n    var ROUTER_REQUEST = '@ngrx/router-store/request';\n    var routerRequestAction = store.createAction(ROUTER_REQUEST, store.props());\n    /**\n     * An action dispatched when the router navigates.\n     */\n    var ROUTER_NAVIGATION = '@ngrx/router-store/navigation';\n    var routerNavigationAction = store.createAction(ROUTER_NAVIGATION, store.props());\n    /**\n     * An action dispatched when the router cancels navigation.\n     */\n    var ROUTER_CANCEL = '@ngrx/router-store/cancel';\n    var routerCancelAction = store.createAction(ROUTER_CANCEL, store.props());\n    /**\n     * An action dispatched when the router errors.\n     */\n    var ROUTER_ERROR = '@ngrx/router-store/error';\n    var routerErrorAction = store.createAction(ROUTER_ERROR, store.props());\n    /**\n     * An action dispatched after navigation has ended and new route is active.\n     */\n    var ROUTER_NAVIGATED = '@ngrx/router-store/navigated';\n    var routerNavigatedAction = store.createAction(ROUTER_NAVIGATED, store.props());\n\n    function routerReducer(state, action) {\n        // Allow compilation with strictFunctionTypes - ref: #1344\n        var routerAction = action;\n        switch (routerAction.type) {\n            case ROUTER_NAVIGATION:\n            case ROUTER_ERROR:\n            case ROUTER_CANCEL:\n                return {\n                    state: routerAction.payload.routerState,\n                    navigationId: routerAction.payload.event.id,\n                };\n            default:\n                return state;\n        }\n    }\n\n    var RouterStateSerializer = /** @class */ (function () {\n        function RouterStateSerializer() {\n        }\n        return RouterStateSerializer;\n    }());\n\n    var DefaultRouterStateSerializer = /** @class */ (function () {\n        function DefaultRouterStateSerializer() {\n        }\n        DefaultRouterStateSerializer.prototype.serialize = function (routerState) {\n            return {\n                root: this.serializeRoute(routerState.root),\n                url: routerState.url,\n            };\n        };\n        DefaultRouterStateSerializer.prototype.serializeRoute = function (route) {\n            var _this = this;\n            var children = route.children.map(function (c) { return _this.serializeRoute(c); });\n            return {\n                params: route.params,\n                paramMap: route.paramMap,\n                data: route.data,\n                url: route.url,\n                outlet: route.outlet,\n                routeConfig: route.routeConfig\n                    ? {\n                        component: route.routeConfig.component,\n                        path: route.routeConfig.path,\n                        pathMatch: route.routeConfig.pathMatch,\n                        redirectTo: route.routeConfig.redirectTo,\n                        outlet: route.routeConfig.outlet,\n                    }\n                    : null,\n                queryParams: route.queryParams,\n                queryParamMap: route.queryParamMap,\n                fragment: route.fragment,\n                component: (route.routeConfig\n                    ? route.routeConfig.component\n                    : undefined),\n                root: undefined,\n                parent: undefined,\n                firstChild: children[0],\n                pathFromRoot: undefined,\n                children: children,\n            };\n        };\n        return DefaultRouterStateSerializer;\n    }());\n\n    var MinimalRouterStateSerializer = /** @class */ (function () {\n        function MinimalRouterStateSerializer() {\n        }\n        MinimalRouterStateSerializer.prototype.serialize = function (routerState) {\n            return {\n                root: this.serializeRoute(routerState.root),\n                url: routerState.url,\n            };\n        };\n        MinimalRouterStateSerializer.prototype.serializeRoute = function (route) {\n            var _this = this;\n            var children = route.children.map(function (c) { return _this.serializeRoute(c); });\n            return {\n                params: route.params,\n                data: route.data,\n                url: route.url,\n                outlet: route.outlet,\n                routeConfig: route.routeConfig\n                    ? {\n                        path: route.routeConfig.path,\n                        pathMatch: route.routeConfig.pathMatch,\n                        redirectTo: route.routeConfig.redirectTo,\n                        outlet: route.routeConfig.outlet,\n                    }\n                    : null,\n                queryParams: route.queryParams,\n                fragment: route.fragment,\n                firstChild: children[0],\n                children: children,\n            };\n        };\n        return MinimalRouterStateSerializer;\n    }());\n\n    (function (NavigationActionTiming) {\n        NavigationActionTiming[NavigationActionTiming[\"PreActivation\"] = 1] = \"PreActivation\";\n        NavigationActionTiming[NavigationActionTiming[\"PostActivation\"] = 2] = \"PostActivation\";\n    })(exports.NavigationActionTiming || (exports.NavigationActionTiming = {}));\n    var _ROUTER_CONFIG = new core.InjectionToken('@ngrx/router-store Internal Configuration');\n    var ROUTER_CONFIG = new core.InjectionToken('@ngrx/router-store Configuration');\n    var DEFAULT_ROUTER_FEATURENAME = 'router';\n    function _createRouterConfig(config) {\n        return tslib_1.__assign({ stateKey: DEFAULT_ROUTER_FEATURENAME, serializer: DefaultRouterStateSerializer, navigationActionTiming: exports.NavigationActionTiming.PreActivation }, config);\n    }\n    var RouterTrigger;\n    (function (RouterTrigger) {\n        RouterTrigger[RouterTrigger[\"NONE\"] = 1] = \"NONE\";\n        RouterTrigger[RouterTrigger[\"ROUTER\"] = 2] = \"ROUTER\";\n        RouterTrigger[RouterTrigger[\"STORE\"] = 3] = \"STORE\";\n    })(RouterTrigger || (RouterTrigger = {}));\n    /**\n     * Connects RouterModule with StoreModule.\n     *\n     * During the navigation, before any guards or resolvers run, the router will dispatch\n     * a ROUTER_NAVIGATION action, which has the following signature:\n     *\n     * ```\n     * export type RouterNavigationPayload = {\n     *   routerState: SerializedRouterStateSnapshot,\n     *   event: RoutesRecognized\n     * }\n     * ```\n     *\n     * Either a reducer or an effect can be invoked in response to this action.\n     * If the invoked reducer throws, the navigation will be canceled.\n     *\n     * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n     * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n     *\n     * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n     * which can be used to restore the consistency of the store.\n     *\n     * Usage:\n     *\n     * ```typescript\n     * @NgModule({\n     *   declarations: [AppCmp, SimpleCmp],\n     *   imports: [\n     *     BrowserModule,\n     *     StoreModule.forRoot(mapOfReducers),\n     *     RouterModule.forRoot([\n     *       { path: '', component: SimpleCmp },\n     *       { path: 'next', component: SimpleCmp }\n     *     ]),\n     *     StoreRouterConnectingModule.forRoot()\n     *   ],\n     *   bootstrap: [AppCmp]\n     * })\n     * export class AppModule {\n     * }\n     * ```\n     */\n    var StoreRouterConnectingModule = /** @class */ (function () {\n        function StoreRouterConnectingModule(store, router, serializer, errorHandler, config) {\n            this.store = store;\n            this.router = router;\n            this.serializer = serializer;\n            this.errorHandler = errorHandler;\n            this.config = config;\n            this.lastEvent = null;\n            this.trigger = RouterTrigger.NONE;\n            this.stateKey = this.config.stateKey;\n            this.setUpStoreStateListener();\n            this.setUpRouterEventsListener();\n        }\n        StoreRouterConnectingModule_1 = StoreRouterConnectingModule;\n        StoreRouterConnectingModule.forRoot = function (config) {\n            if (config === void 0) { config = {}; }\n            return {\n                ngModule: StoreRouterConnectingModule_1,\n                providers: [\n                    { provide: _ROUTER_CONFIG, useValue: config },\n                    {\n                        provide: ROUTER_CONFIG,\n                        useFactory: _createRouterConfig,\n                        deps: [_ROUTER_CONFIG],\n                    },\n                    {\n                        provide: RouterStateSerializer,\n                        useClass: config.serializer\n                            ? config.serializer\n                            : config.routerState === 1 /* Minimal */\n                                ? MinimalRouterStateSerializer\n                                : DefaultRouterStateSerializer,\n                    },\n                ],\n            };\n        };\n        StoreRouterConnectingModule.prototype.setUpStoreStateListener = function () {\n            var _this = this;\n            this.store\n                .pipe(store.select(this.stateKey), operators.withLatestFrom(this.store))\n                .subscribe(function (_a) {\n                var _b = tslib_1.__read(_a, 2), routerStoreState = _b[0], storeState = _b[1];\n                _this.navigateIfNeeded(routerStoreState, storeState);\n            });\n        };\n        StoreRouterConnectingModule.prototype.navigateIfNeeded = function (routerStoreState, storeState) {\n            var _this = this;\n            if (!routerStoreState || !routerStoreState.state) {\n                return;\n            }\n            if (this.trigger === RouterTrigger.ROUTER) {\n                return;\n            }\n            if (this.lastEvent instanceof router.NavigationStart) {\n                return;\n            }\n            var url = routerStoreState.state.url;\n            if (this.router.url !== url) {\n                this.storeState = storeState;\n                this.trigger = RouterTrigger.STORE;\n                this.router.navigateByUrl(url).catch(function (error) {\n                    _this.errorHandler.handleError(error);\n                });\n            }\n        };\n        StoreRouterConnectingModule.prototype.setUpRouterEventsListener = function () {\n            var _this = this;\n            var dispatchNavLate = this.config.navigationActionTiming ===\n                exports.NavigationActionTiming.PostActivation;\n            var routesRecognized;\n            this.router.events\n                .pipe(operators.withLatestFrom(this.store))\n                .subscribe(function (_a) {\n                var _b = tslib_1.__read(_a, 2), event = _b[0], storeState = _b[1];\n                _this.lastEvent = event;\n                if (event instanceof router.NavigationStart) {\n                    _this.routerState = _this.serializer.serialize(_this.router.routerState.snapshot);\n                    if (_this.trigger !== RouterTrigger.STORE) {\n                        _this.storeState = storeState;\n                        _this.dispatchRouterRequest(event);\n                    }\n                }\n                else if (event instanceof router.RoutesRecognized) {\n                    routesRecognized = event;\n                    if (!dispatchNavLate && _this.trigger !== RouterTrigger.STORE) {\n                        _this.dispatchRouterNavigation(event);\n                    }\n                }\n                else if (event instanceof router.NavigationCancel) {\n                    _this.dispatchRouterCancel(event);\n                    _this.reset();\n                }\n                else if (event instanceof router.NavigationError) {\n                    _this.dispatchRouterError(event);\n                    _this.reset();\n                }\n                else if (event instanceof router.NavigationEnd) {\n                    if (_this.trigger !== RouterTrigger.STORE) {\n                        if (dispatchNavLate) {\n                            _this.dispatchRouterNavigation(routesRecognized);\n                        }\n                        _this.dispatchRouterNavigated(event);\n                    }\n                    _this.reset();\n                }\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterRequest = function (event) {\n            this.dispatchRouterAction(ROUTER_REQUEST, { event: event });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterNavigation = function (lastRoutesRecognized) {\n            var nextRouterState = this.serializer.serialize(lastRoutesRecognized.state);\n            this.dispatchRouterAction(ROUTER_NAVIGATION, {\n                routerState: nextRouterState,\n                event: new router.RoutesRecognized(lastRoutesRecognized.id, lastRoutesRecognized.url, lastRoutesRecognized.urlAfterRedirects, nextRouterState),\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterCancel = function (event) {\n            this.dispatchRouterAction(ROUTER_CANCEL, {\n                storeState: this.storeState,\n                event: event,\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterError = function (event) {\n            this.dispatchRouterAction(ROUTER_ERROR, {\n                storeState: this.storeState,\n                event: new router.NavigationError(event.id, event.url, \"\" + event),\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterNavigated = function (event) {\n            var routerState = this.serializer.serialize(this.router.routerState.snapshot);\n            this.dispatchRouterAction(ROUTER_NAVIGATED, { event: event, routerState: routerState });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterAction = function (type, payload) {\n            this.trigger = RouterTrigger.ROUTER;\n            try {\n                this.store.dispatch({\n                    type: type,\n                    payload: tslib_1.__assign({ routerState: this.routerState }, payload, { event: this.config.routerState === 1 /* Minimal */\n                            ? { id: payload.event.id, url: payload.event.url }\n                            : payload.event }),\n                });\n            }\n            finally {\n                this.trigger = RouterTrigger.NONE;\n            }\n        };\n        StoreRouterConnectingModule.prototype.reset = function () {\n            this.trigger = RouterTrigger.NONE;\n            this.storeState = null;\n            this.routerState = null;\n        };\n        var StoreRouterConnectingModule_1;\n        StoreRouterConnectingModule = StoreRouterConnectingModule_1 = tslib_1.__decorate([\n            core.NgModule({}),\n            tslib_1.__param(4, core.Inject(ROUTER_CONFIG)),\n            tslib_1.__metadata(\"design:paramtypes\", [store.Store,\n                router.Router,\n                RouterStateSerializer,\n                core.ErrorHandler, Object])\n        ], StoreRouterConnectingModule);\n        return StoreRouterConnectingModule;\n    }());\n\n    function getSelectors(selectState) {\n        var selectRouterState = store.createSelector(selectState, function (router) { return router && router.state; });\n        var selectCurrentRoute = store.createSelector(selectRouterState, function (routerState) {\n            if (!routerState) {\n                return undefined;\n            }\n            var route = routerState.root;\n            while (route.firstChild) {\n                route = route.firstChild;\n            }\n            return route;\n        });\n        var selectQueryParams = store.createSelector(selectCurrentRoute, function (route) { return route && route.queryParams; });\n        var selectQueryParam = function (param) {\n            return store.createSelector(selectQueryParams, function (params) { return params && params[param]; });\n        };\n        var selectRouteParams = store.createSelector(selectCurrentRoute, function (route) { return route && route.params; });\n        var selectRouteParam = function (param) {\n            return store.createSelector(selectRouteParams, function (params) { return params && params[param]; });\n        };\n        var selectRouteData = store.createSelector(selectCurrentRoute, function (route) { return route && route.data; });\n        var selectUrl = store.createSelector(selectRouterState, function (routerState) { return routerState && routerState.url; });\n        return {\n            selectCurrentRoute: selectCurrentRoute,\n            selectQueryParams: selectQueryParams,\n            selectQueryParam: selectQueryParam,\n            selectRouteParams: selectRouteParams,\n            selectRouteParam: selectRouteParam,\n            selectRouteData: selectRouteData,\n            selectUrl: selectUrl,\n        };\n    }\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵngrx_modules_router_store_router_store_a = _ROUTER_CONFIG;\n    exports.ɵngrx_modules_router_store_router_store_b = _createRouterConfig;\n    exports.ROUTER_ERROR = ROUTER_ERROR;\n    exports.ROUTER_CANCEL = ROUTER_CANCEL;\n    exports.ROUTER_NAVIGATION = ROUTER_NAVIGATION;\n    exports.ROUTER_NAVIGATED = ROUTER_NAVIGATED;\n    exports.ROUTER_REQUEST = ROUTER_REQUEST;\n    exports.routerCancelAction = routerCancelAction;\n    exports.routerErrorAction = routerErrorAction;\n    exports.routerNavigatedAction = routerNavigatedAction;\n    exports.routerNavigationAction = routerNavigationAction;\n    exports.routerRequestAction = routerRequestAction;\n    exports.routerReducer = routerReducer;\n    exports.StoreRouterConnectingModule = StoreRouterConnectingModule;\n    exports.ROUTER_CONFIG = ROUTER_CONFIG;\n    exports.DEFAULT_ROUTER_FEATURENAME = DEFAULT_ROUTER_FEATURENAME;\n    exports.RouterStateSerializer = RouterStateSerializer;\n    exports.DefaultRouterStateSerializer = DefaultRouterStateSerializer;\n    exports.MinimalRouterStateSerializer = MinimalRouterStateSerializer;\n    exports.getSelectors = getSelectors;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=router-store.umd.js.map\n"]}